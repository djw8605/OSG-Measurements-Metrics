<graphtool-config>

  <import module="gratia.database.query_handler">*</import>

  <import module="graphtool.database.queries">SqlQueries</import>
  <import module="graphtool.database.query_handler">*</import>
  <import module="time"/>

  <import file="$DBPARAM_LOCATION" />

  <class type="SqlQueries" name="RSVWLCGGeneric">

    <attribute name="display_name"> RSV WLCG Queries </attribute>
    <attribute name="connection_manager"> RSVConnMan </attribute>

<!--
    <query name="availability">
        <inputs>
            <input name="starttime" type="timestamp" kind="sql">time.time()-86400</input>
            <input name="endtime" type="timestamp" kind="sql">time.time()</input>
            <input name="facility" kind="sql">.*</input>
            <input name="metric" kind="sql">.*</input>
        </inputs>
        <sql>
        SELECT OIMR.Name, OIMM.name, from_unixtime(RSVM.timestamp), CASE WHEN OIMMS.metric_status_description = "WARNING" THEN "OK" ELSE OIMMS.metric_status_description END
        FROM rsvprocess.metricdata RSVM FORCE INDEX (timestamp)
        JOIN oim.resource OIMR on RSVM.resource_id=OIMR.resource_id
        JOIN oim.resource_resource_group OIMRRG on OIMRRG.resource_id = OIMR.resource_id
        JOIN oim.resource_group OIMRG on OIMRRG.resource_group_id = OIMRG.resource_group_id
        JOIN oim.metric_status OIMMS on RSVM.metric_status_id = OIMMS.metric_status_id
        JOIN oim.metric OIMM on OIMM.metric_id = RSVM.metric_id
        WHERE
            OIMR.active=1 AND OIMR.disable=0 AND OIMRG.osg_grid_type_id=1 AND
            RSVM.timestamp &gt;= :starttime AND RSVM.timestamp &lt; :endtime AND
            OIMR.fqdn regexp :facility AND
            OIMM.name regexp :metric
        UNION
        SELECT OIMR.Name, "Maintenance", RD.start_time, RD.end_time, "MAINTENANCE"
            FROM oim.resource_downtime RD
            JOIN oim.resource OIMR on OIMR.resource_id = RD.resource_id 
            JOIN oim.resource_resource_group OIMRRG on OIMRRG.resource_id = OIMR.resource_id
            JOIN oim.resource_group OIMRG on OIMRRG.resource_group_id = OIMRG.resource_group_id
            WHERE
                OIMR.active=1 AND OIMR.disable=0 AND OIMRG.osg_grid_type_id=1 AND
                ((RD.end_time &gt;= from_unixtime(:starttime) AND RD.end_time &lt; from_unixtime(:endtime)) OR
                (RD.start_time &gt;= from_unixtime(:starttime) AND RD.start_time &lt; from_unixtime(:endtime)) OR
                (RD.start_time &lt;= from_unixtime(:starttime) AND RD.end_time &gt;= from_unixtime(:endtime))) AND
                OIMR.fqdn regexp :facility
        </sql>  
        <results module="gratia.database.query_handler" function="wlcg_availability"/>
        <attribute name="pivot_name">Site</attribute>
        <attribute name="title">WLCG Availability</attribute>
    </query>
-->
<!--
-->
    <query name="reliability">
        <inputs>
            <input name="starttime" type="timestamp" kind="sql">time.time()-86400</input>
            <input name="endtime" type="timestamp" kind="sql">time.time()</input>
            <input name="facility" kind="sql">.*</input>
            <input name="metric" kind="sql">.*</input>
        </inputs>
        <sql>
        SELECT OIMR.Name, OIMM.name, from_unixtime(RSVM.timestamp), null, CASE WHEN OIMMS.description = "WARNING" THEN "OK" ELSE OIMMS.description END
            FROM rsvprocess.metricdata RSVM FORCE INDEX (timestamp)
            JOIN oim.resource OIMR on RSVM.resource_id=OIMR.id
            JOIN oim.resource_group OIMRG on OIMR.resource_group_id = OIMRG.id
            JOIN oim.metric_status OIMMS on RSVM.metric_status_id = OIMMS.id
            JOIN oim.metric OIMM on OIMM.id = RSVM.metric_id
            WHERE
                OIMR.active=1 AND OIMR.disable=0 AND OIMRG.osg_grid_type_id=1 AND
            RSVM.timestamp &gt;= :starttime AND RSVM.timestamp &lt; :endtime AND
            OIMR.fqdn regexp :facility AND
            OIMM.name regexp :metric
        UNION
        SELECT OIMR.Name, "Maintenance", RD.start_time, RD.end_time, "MAINTENANCE"
            FROM oim.resource_downtime RD
            JOIN oim.resource OIMR on OIMR.id = RD.resource_id
            JOIN oim.resource_group OIMRG on OIMR.resource_group_id = OIMRG.id
            WHERE
                OIMR.active=1 AND OIMR.disable=0 AND OIMRG.osg_grid_type_id=1 AND
                ((RD.end_time &gt;= from_unixtime(:starttime) AND RD.end_time &lt; from_unixtime(:endtime)) OR
                (RD.start_time &gt;= from_unixtime(:starttime) AND RD.start_time &lt; from_unixtime(:endtime)) OR
                (RD.start_time &lt;= from_unixtime(:starttime) AND RD.end_time &gt;= from_unixtime(:endtime))) AND
                OIMR.fqdn regexp :facility
        </sql>
        <results module="gratia.database.query_handler" function="wlcg_availability"/>
        <attribute name="pivot_name">Site</attribute>
        <attribute name="title">WLCG Reliability</attribute>
    </query>

  </class>

  <class type="SqlQueries" name="RSVWLCGQueries">

    <attribute name="display_name"> WLCG Availability </attribute>
    <attribute name="connection_manager"> RSVConnMan </attribute>

    <aggregate>
      <connection> rsv </connection>
    </aggregate>

    <query name="rsv_wlcg_availability" base="RSVWLCGGeneric.reliability">
        <results module="gratia.database.query_handler" function="wlcg_availability"/>
        <attribute name="title">Resource WLCG Availability</attribute>
        <sql/>
    </query>

    <query name="rsv_wlcg_reliability" base="RSVWLCGGeneric.reliability">
        <results module="gratia.database.query_handler" function="wlcg_availability"/>
        <attribute name="title">Resource WLCG Reliability</attribute>
        <sql/>
    </query>

    <query name="rsv_sam_availability" base="RSVWLCGGeneric.reliability">
        <results module="gratia.database.query_handler" function="sam_site_availability"/>
        <attribute name="title">Site WLCG Availability</attribute>
        <sql/>
    </query>
        
    <query name="rsv_sam_reliability" base="RSVWLCGGeneric.reliability">
        <results module="gratia.database.query_handler" function="sam_site_availability"/>
        <attribute name="title">Site WLCG Availability</attribute>
        <sql/>
    </query>

    <query name="wlcg_site_avail" base="RSVWLCGGeneric.reliability">
        <results module="gratia.database.query_handler" function="wlcg_site_availability"/>
        <attribute name="title">Federation Availability</attribute>
        <sql/>
    </query>

    <query name="wlcg_site_reliability" base="RSVWLCGGeneric.reliability">
        <results module="gratia.database.query_handler" function="wlcg_site_availability"/>
        <attribute name="title">Federation Availability</attribute>
        <sql/>
    </query>

<!--
-->

    <query name="wlcg_last_status">
        <inputs>
            <input name="starttime" type="timestamp" kind="sql">time.time()</input>
            <input name="facility" kind="sql">.*</input>
            <input name="metric" kind="sql">.*</input>
        </inputs>
        <sql>
        SELECT OIMR.Name as SiteName, OIMM.name, from_unixtime(foo.Timestamp), CASE WHEN OIMMS.description = "WARNING" THEN "OK" ELSE OIMMS.description END
        FROM (SELECT OIMR.id AS resource_id, OIMM.id as metric_id, max(RSVM.timestamp) AS Timestamp
              FROM rsvprocess.metricdata RSVM FORCE INDEX (timestamp)
	      JOIN oim.metric OIMM on OIMM.id = RSVM.metric_id
              JOIN oim.resource OIMR on OIMR.id = RSVM.resource_id
              WHERE
                  RSVM.timestamp &lt;= :starttime AND
                  RSVM.timestamp &gt; :starttime-86400 AND
                  OIMR.fqdn regexp :facility AND
                  OIMM.name regexp :metric
              GROUP BY OIMR.fqdn, OIMM.name) AS foo
        JOIN rsvprocess.metricdata RSVM ON RSVM.resource_id=foo.resource_id AND RSVM.metric_id=foo.metric_id AND RSVM.timestamp=foo.timestamp
        JOIN oim.resource OIMR on RSVM.resource_id=OIMR.id
        JOIN oim.resource_group OIMRG on OIMR.resource_group_id= OIMRG.id
        JOIN oim.metric_status OIMMS on RSVM.metric_status_id = OIMMS.id
        JOIN oim.metric OIMM on OIMM.id = RSVM.metric_id
        WHERE OIMR.active=1 AND OIMR.disable=0 AND OIMRG.osg_grid_type_id=1
        </sql>
        <results module="gratia.database.query_handler" function="simple_results_parser">
            <inputs>
                <input name="pivots">0,1,2</input>
                <input name="results">3</input>
            </inputs>
        </results>
        <attribute name="pivot_name">Site</attribute>
        <attribute name="title">Last Test Status</attribute>
    </query>

  </class>

</graphtool-config>

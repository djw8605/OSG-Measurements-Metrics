<graphtool-config>

  <import module="gratia.database.query_handler">*</import>

  <import module="graphtool.database.queries">SqlQueries</import>
  <import module="graphtool.database.query_handler">*</import>
  <import module="time"/>

  <import file="$DBPARAM_LOCATION" />

  <class type="SqlQueries" name="RSVSecureQueries">

    <attribute name="display_name"> RSV Graphs </attribute>
    <attribute name="connection_manager"> RSVConnMan </attribute>

    <query name="admins">
        <sql>
select OIMR.name, OIMC.name, OIMC.primary_email
FROM oim.resource OIMR
JOIN oim.resource_contact OIMRC on OIMRC.resource_id = OIMR.id
JOIN oim.contact OIMC on OIMC.id = OIMRC.contact_id
GROUP BY OIMR.name, OIMC.name
</sql>
            <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="grouping"> 1 </input>
            <input name="grouping_transform">make_string</input>
          <input name="results"> 2 </input>
        </inputs>
</results>
<attribute name="pivot_name">Resource</attribute>
<attribute name="grouping_name">Person</attribute>
<attribute name="column_names">Email</attribute>
            <attribute name="graph_type"/>
            <attribute name="title">OIM Site Admin Contacts</attribute>
    </query>

  </class>

  <class type="SqlQueries" name="RSVQueries">

    <attribute name="display_name"> RSV Graphs </attribute>
    <attribute name="connection_manager"> RSVConnMan </attribute>

    <aggregate>
      <connection> rsv </connection>
    </aggregate>

    <query name="rsv_quality">
      <inputs>
        <input name="span" type="eval" kind="sql">7200</input>
        <input name="starttime" type="timestamp" kind="sql">time.time()-4*86400</input>
        <input name="endtime" type="timestamp" kind="sql">time.time()</input>
        <input name="facility" kind="sql">.*</input>
        <input name="metric" kind="sql">.*</input>
        <input name="fixed-height">False</input>
        <!--<input name="excludefacility" kind="sql">USCMS-FNAL-WC1-CE2|USCMS-FNAL-WC1-CE3|USCMS-FNAL-WC1-CE4|UCSDT2-B</input>-->
      </inputs>
      <sql>
select
  OIMR.fqdn as fqdn,
  from_unixtime(truncate(RSVM.timestamp/:span, 0)*:span) as time,
  SUM(CASE OIMMS.description WHEN "OK" THEN 1 ELSE 0 END),
  SUM(CASE OIMMS.description WHEN "OK" THEN 0 WHEN "UNKNOWN" THEN 0 ELSE 1 END)
from
  rsvprocess.metricdata RSVM
join
  oim.resource OIMR on RSVM.resource_id=OIMR.id
join
  oim.metric_status OIMMS on RSVM.metric_status_id = OIMMS.id
join
  oim.metric OIMM on OIMM.id = RSVM.metric_id
where
     RSVM.timestamp &gt;= :starttime AND RSVM.timestamp &lt; :endtime AND
     OIMR.fqdn regexp :facility AND
     OIMM.name regexp :metric
group by
  fqdn, time
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="grouping"> 1 </input>
          <input name="results"> 2,3 </input>
        </inputs>
      </results>
      <attribute name="graph_type"> QualityMap </attribute>
      <attribute name="pivot_name">Site</attribute>
      <attribute name="grouping_name">Time</attribute>
      <attribute name="title">RSV Site Quality</attribute>
      <attribute name="column_names">Successful, Failed</attribute>
      <attribute name="column_units">Probes, Probes</attribute>
    </query>

    <query name="rsv_results">
      <inputs>
        <input name="starttime" type="timestamp" kind="sql">time.time()-4*86400</input>
        <input name="endtime" type="timestamp" kind="sql">time.time()</input>
        <input name="facility" kind="sql">.*</input>
        <input name="metric" kind="sql">.*</input>
        <input name="status" kind="sql">UNKNOWN|WARNING|CRITICAL</input>
        <input name="limit" type="int" kind="sql">30</input>
      </inputs>
      <sql>
SELECT
  OIMR.fqdn as fqdn,
  OIMM.name as metric_name,
  OIMMS.description as metric_status,
  from_unixtime(RSVM.timestamp) as timestamp,
  RSVMD.detail as details
FROM
  rsvprocess.metricdata as RSVM
JOIN oim.resource OIMR on RSVM.resource_id=OIMR.id
JOIN oim.metric_status OIMMS on RSVM.metric_status_id = OIMMS.id
JOIN oim.metric OIMM on OIMM.id = RSVM.metric_id
JOIN rsvprocess.metricdetail RSVMD on RSVM.id = RSVMD.id
WHERE
     RSVM.timestamp &gt;= :starttime AND RSVM.timestamp &lt; :endtime AND
     OIMR.fqdn regexp :facility AND
     OIMM.name regexp :metric AND
     OIMMS.description regexp :status
ORDER BY RSVM.timestamp desc
LIMIT :limit
      </sql>
      <results module="graphtool.database.query_handler" function="complex_pivot_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="results"> 1,2,3,4 </input>
        </inputs>
      </results>
      <attribute name="graph_type"/>
      <attribute name="pivot_name">Service FQDN</attribute>
      <attribute name="title">RSV Individual Results</attribute>
      <attribute name="column_names">Metric, Status, Time, Output</attribute>
      <attribute name="column_units">,,,</attribute>
    </query>

    <query name="rsv_reliability">
      <inputs>
        <input name="span" kind="sql" type="eval">7200</input>
        <input name="starttime" type="timestamp" kind="sql">time.time()-2*86400</input>
        <input name="endtime" type="timestamp" kind="sql">time.time()</input>
        <input name="facility" kind="sql">.*</input>
        <input name="metric" kind="sql">.*</input>
        <input name="fixed-height">False</input>
        <!--<input name="excludefacility" kind="sql">USCMS-FNAL-WC1-CE2|USCMS-FNAL-WC1-CE3|USCMS-FNAL-WC1-CE4|UCSDT2-B</input>-->
      </inputs>
      <sql>
select
  OIMR.fqdn as fqdn,
  from_unixtime(truncate(RSVM.timestamp/:span, 0)*:span) as time,
  SUM(CASE OIMMS.description WHEN "OK" THEN 1 ELSE 0 END),
  SUM(CASE OIMMS.description WHEN "OK" THEN 0 WHEN "UNKNOWN" THEN 0 ELSE 1 END)
from
  rsvprocess.metricdata RSVM
join
  oim.resource OIMR on RSVM.resource_id=OIMR.id
join
  oim.metric_status OIMMS on RSVM.metric_status_id = OIMMS.id
join
  oim.metric OIMM on OIMM.id = RSVM.metric_id
where
     RSVM.timestamp &gt;= :starttime AND RSVM.timestamp &lt; :endtime AND
     OIMR.fqdn regexp :facility AND
     OIMM.name regexp :metric
group by
  fqdn, time
      </sql>
      <results module="gratia.database.query_handler" function="rsv_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="grouping"> 1 </input>
          <input name="results"> 2,3 </input>
        </inputs>
      </results>
      <attribute name="graph_type"> QualityMap </attribute>
      <attribute name="pivot_name">Site</attribute>
      <attribute name="grouping_name">Time</attribute>
      <attribute name="title">RSV Site Quality</attribute>
      <attribute name="column_names">Successful, Failed</attribute>
      <attribute name="column_units">Probes, Probes</attribute>
    </query>

    <query name="rsv_reliability_daily">
      <inputs>
        <input name="span" type="eval">86400</input>
        <input name="starttime" type="timestamp" kind="sql">time.time()-14*86400</input>
        <input name="endtime" type="timestamp" kind="sql">time.time()</input>
        <input name="facility" kind="sql">.*</input>
        <input name="metric" kind="sql">.*</input>
        <input name="fixed-height">False</input>
      </inputs>
      <sql>
select
  OIMR.fqdn as fqdn,
  from_unixtime(truncate(RSVM.timestamp/7200, 0)*7200) as time,
  SUM(CASE OIMMS.description WHEN "OK" THEN 1 ELSE 0 END),
  SUM(CASE OIMMS.description WHEN "OK" THEN 0 WHEN "UNKNOWN" THEN 0 ELSE 1 END)
from
  rsvprocess.metricdata RSVM
join
  oim.resource OIMR on RSVM.resource_id=OIMR.id
join
  oim.metric_status OIMMS on RSVM.metric_status_id = OIMMS.id
join
  oim.metric OIMM on OIMM.id = RSVM.metric_id
where
     RSVM.timestamp &gt;= :starttime AND RSVM.timestamp &lt; :endtime AND
     OIMR.fqdn regexp :facility AND
     OIMM.name regexp :metric
group by
  fqdn, time
      </sql>
      <results module="gratia.database.query_handler" function="rsv_daily_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="grouping"> 1 </input>
          <input name="results"> 2,3 </input>
        </inputs>
      </results>
      <attribute name="graph_type"> QualityMap </attribute>
      <attribute name="pivot_name">Site</attribute>
      <attribute name="grouping_name">Time</attribute>
      <attribute name="title">RSV Site Quality</attribute>
      <attribute name="column_names">Successful, Failed</attribute>
      <attribute name="column_units">Probes, Probes</attribute>
    </query>

    <query name="rsv_reliability_total">
      <inputs>
        <input name="starttime" type="timestamp" kind="sql">time.time()-14*86400</input>
        <input name="endtime" type="timestamp" kind="sql">time.time()</input>
        <input name="facility" kind="sql">.*</input>
        <input name="metric" kind="sql">.*</input>
        <input name="fixed-height">False</input>
      </inputs>
      <sql>
select
  OIMR.fqdn as fqdn,
  from_unixtime(truncate(RSVM.timestamp/7200, 0)*7200) as time,
  SUM(CASE OIMMS.description WHEN "OK" THEN 1 ELSE 0 END),
  SUM(CASE OIMMS.description WHEN "OK" THEN 0 WHEN "UNKNOWN" THEN 0 ELSE 1 END)
from
  rsvprocess.metricdata RSVM
join
  oim.resource OIMR on RSVM.resource_id=OIMR.id
join
  oim.metric_status OIMMS on RSVM.metric_status_id = OIMMS.id
join
  oim.metric OIMM on OIMM.id = RSVM.metric_id
where
     RSVM.timestamp &gt;= :starttime AND RSVM.timestamp &lt; :endtime AND
     OIMR.fqdn regexp :facility AND
     OIMM.name regexp :metric
group by
  fqdn, time
      </sql>
      <results module="gratia.database.query_handler" function="rsv_total_parser"/>
      <attribute name="graph_type"/>
      <attribute name="pivot_name">Site</attribute>
      <attribute name="title">RSV Site Total Availability</attribute>
    </query>

    <query name="service_to_resource">
        <!-- Build a map from (service_type, resource_name) -> parent resource -->
        <sql>
            SELECT OIMS.name as service_type, OIMR.name, OIMRG.name as parent_name
            FROM oim.resource_service OIMRS
            JOIN oim.service OIMS ON OIMS.id = OIMRS.service_id
            JOIN oim.resource OIMR ON OIMRS.resource_id = OIMR.id
            JOIN oim.resource_group OIMRG ON OIMRG.id = OIMR.resource_group_id
            JOIN oim.resource_wlcg OIMRW on OIMRW.resource_id = OIMR.id
            WHERE OIMRW.interop_monitoring = 1 and OIMRG.osg_grid_type_id=1
            AND (OIMR.active=1 and OIMR.disable=0)
        </sql>
      <results module="gratia.database.query_handler" function="special_resource_group_parser1">
        <inputs>
          <input name="pivots">0, 1</input>
          <input name="results">2</input>
        </inputs>
      </results>
    </query>

    <query name="resource_to_federation">
        <!-- Build a map resource -> federation. -->
        <sql>
            SELECT OIMR.name, OIMRW.accounting_name
            FROM oim.resource OIMR
            JOIN oim.resource_wlcg OIMRW ON OIMRW.resource_id= OIMR.id
            WHERE OIMRW.accounting_name is not null
        </sql>
      <results module="graphtool.database.query_handler" function="simple_results_parser">
        <inputs>
          <input name="pivots">0</input>
          <input name="results">1</input>
        </inputs>
      </results>
    </query>

    <query name="resource_group_to_federation">
        <!-- Build a map resource_group -> federation. -->
        <sql>
            SELECT OIMRG.name, OIMRW.accounting_name
            FROM oim.resource OIMR
            JOIN oim.resource_group OIMRG ON OIMRG.id = OIMR.resource_group_id
            JOIN oim.resource_wlcg OIMRW ON OIMRW.resource_id= OIMR.id
            WHERE OIMRW.accounting_name is not null
            GROUP BY OIMRG.name
        </sql>
      <results module="gratia.database.query_handler" function="special_resource_group_parser2">
        <inputs>
          <input name="pivots">0</input>
          <input name="results">1</input>
        </inputs>
      </results>
    </query>

    <query name="service_to_resource_all">
        <!-- Build a map from (service_type, resource_name) -> parent resource -->
        <sql>
            SELECT OIMS.name as service_type, OIMR.name, OIMRG.name as parent_name
            FROM oim.resource_service OIMRS
            JOIN oim.service OIMS ON OIMS.id = OIMRS.service_id
            JOIN oim.resource OIMR ON OIMRS.resource_id = OIMR.id
            JOIN oim.resource_group OIMRG ON OIMRG.id = OIMR.resource_group_id
            WHERE OIMRG.osg_grid_type_id=1 and (OIMR.active=1 and OIMR.disable=0)
        </sql>
      <results module="gratia.database.query_handler" function="special_resource_group_parser1">
        <inputs>
          <input name="pivots">0, 1</input>
          <input name="results">2</input>
        </inputs>
      </results>
    </query>

    <query name="deployment_count">
        <inputs>
            <input name="starttime" type="timestamp" kind="sql">time.time()-60*86400</input>
            <input name="endtime" type="timestamp" kind="sql">time.time()</input>
            <input name="span" kind="sql" type="int">86400</input>
            <input name="version" kind="sql">OSG-1.0.0</input>
        </inputs>
        <sql>
        SELECT
            time, COUNT(*) as deploy_count
        FROM
            (SELECT
                truncate( RSVM.timestamp / :span, 0 ) * :span as time,
                OIMR.fqdn as fqdn
            FROM rsvprocess.metricdata RSVM
            JOIN oim.resource OIMR on RSVM.resource_id=OIMR.id
            JOIN rsvprocess.metricdetail RSVMD on RSVMD.id = RSVM.id
            JOIN oim.metric OIMM on OIMM.id = RSVM.metric_id
            WHERE
                RSVMD.detail regexp :version AND
                RSVM.timestamp &gt;= :starttime AND RSVM.timestamp &lt; :endtime AND
                OIMM.name = 'org.osg.general.osg-version'
            GROUP BY time, fqdn
            ) as foo
        GROUP BY time
        </sql>
        <results module="graphtool.database.query_handler" function="simple_results_parser">
          <inputs>
            <input name="pivots"> 0 </input>
            <input name="results"> 1 </input>
          </inputs>
        </results>
        <attribute name="title">Number of Deployed $version Sites</attribute>
        <attribute name="column_name">Deployed Site Count</attribute>
        <attribute name="graph_type">GratiaBar</attribute>
    </query>

    <query name="grid_deployment_count">
        <inputs>
            <input name="starttime" type="timestamp" kind="sql">time.time()-60*86400</input>
            <input name="endtime" type="timestamp" kind="sql">time.time()</input>
            <input name="span" kind="sql" type="int">86400</input>
            <input name="version" kind="sql">OSG-1.0.0</input>
        </inputs>
        <sql>
        SELECT
            grid, time, COUNT(*) as deploy_count
        FROM
            (SELECT
                truncate( RSVM.timestamp / :span, 0 ) * :span as time,
                OIMR.fqdn,
                OIMGT.name as grid
            FROM rsvprocess.metricdata RSVM
            JOIN oim.resource OIMR on RSVM.resource_id=OIMR.id
            JOIN oim.resource_group OIMRG on OIMR.resource_group_id = OIMRG.id
            JOIN oim.osg_grid_type OIMGT on OIMRG.osg_grid_type_id = OIMGT.id
            JOIN rsvprocess.metricdetail RSVMD on RSVMD.id = RSVM.id
            JOIN oim.metric OIMM on OIMM.id = RSVM.metric_id
            WHERE
                RSVMD.detail regexp :version AND
                RSVM.timestamp &gt;= :starttime AND RSVM.timestamp &lt; :endtime AND
                OIMM.name = 'org.osg.general.osg-version'
            GROUP BY time, fqdn, grid
            ) as foo
        GROUP BY time, grid
        </sql>
        <results module="graphtool.database.query_handler" function="results_parser">
          <inputs>
            <input name="pivots"> 0 </input>
            <input name="grouping"> 1 </input>
            <input name="results"> 2 </input>
            <input name="grouping_transform">make_int</input>
          </inputs>
        </results>
        <attribute name="title">RSV $version Sites by Grid</attribute>
        <attribute name="column_name">Deployed Site Count</attribute>
        <attribute name="pivot_name">Grid</attribute>
        <attribute name="graph_type">GratiaStackedBar</attribute>
    </query>

    <query name="version_deployment_count">
        <inputs>
            <input name="starttime" type="timestamp" kind="sql">time.time()-60*86400</input>
            <input name="endtime" type="timestamp" kind="sql">time.time()</input>
            <input name="span" kind="sql" type="int">86400</input>
            <input name="version" kind="sql">^OSG..\..\..</input>
        </inputs>
        <sql>

        SELECT
            version, time, COUNT(*) as deploy_count
        FROM
            (SELECT
                truncate( RSVM.timestamp / :span, 0 ) * :span as time,
                OIMR.fqdn,
                left(RSVMD.detail, 9) as version
            FROM rsvprocess.metricdata RSVM
            JOIN oim.resource OIMR on RSVM.resource_id=OIMR.id
            JOIN oim.resource_group OIMRG on OIMR.resource_group_id = OIMRG.id
            JOIN oim.osg_grid_type OIMGT on OIMRG.osg_grid_type_id = OIMGT.id
            JOIN rsvprocess.metricdetail RSVMD on RSVMD.id = RSVM.id
            JOIN oim.metric OIMM on OIMM.id = RSVM.metric_id
            WHERE
                RSVMD.detail regexp :version AND
                RSVM.timestamp &gt;= :starttime AND RSVM.timestamp &lt; :endtime AND
                OIMM.name = 'org.osg.general.osg-version'
            GROUP BY time, fqdn, version
            ) as foo
        GROUP BY time, version

        </sql>
        <results module="graphtool.database.query_handler" function="results_parser">
          <inputs>
            <input name="pivots"> 0 </input>
            <input name="grouping"> 1 </input>
            <input name="results"> 2 </input>
            <input name="grouping_transform">make_int</input>
          </inputs>
        </results>
        <attribute name="title">RSV Reporting Sites by OSG Version</attribute>
        <attribute name="column_name">Deployed Site Count</attribute>
        <attribute name="pivot_name">Version</attribute>
        <attribute name="graph_type">GratiaStackedBar</attribute>
    </query>

    <query name="vdt_version_deployment_count">
        <inputs>
            <input name="starttime" type="timestamp" kind="sql">time.time()-60*86400</input>
            <input name="endtime" type="timestamp" kind="sql">time.time()</input>
            <input name="span" kind="sql" type="int">86400</input>
            <input name="version" kind="sql">.*VDT Version</input>
            <input name="details_len" kind="sql" type="int">9</input>
        </inputs>
        <sql>
        SELECT
            version, time, COUNT(*) as deploy_count
        FROM
            (SELECT
                truncate( RSVM.timestamp / :span, 0 ) * :span as time,
                OIMR.fqdn,
                concat('VDT-',substring(RSVMD.detail from 44 for 7)) as version
            FROM rsvprocess.metricdata RSVM
            JOIN oim.resource OIMR on RSVM.resource_id=OIMR.id
            JOIN oim.resource_group OIMRG on OIMR.resource_group_id = OIMRG.id
            JOIN oim.osg_grid_type OIMGT on OIMRG.osg_grid_type_id = OIMGT.id
            JOIN rsvprocess.metricdetail RSVMD on RSVMD.id = RSVM.id
            JOIN oim.metric OIMM on OIMM.id = RSVM.metric_id
            WHERE
                RSVMD.detail regexp :version AND
                RSVM.timestamp &gt;= :starttime AND RSVM.timestamp &lt; :endtime AND
                OIMM.name = 'org.osg.general.vdt-version'
            GROUP BY time, fqdn, version
            ) as foo
        GROUP BY time, version
        </sql>
        <results module="graphtool.database.query_handler" function="results_parser">
          <inputs>
            <input name="pivots"> 0 </input>
            <input name="grouping"> 1 </input>
            <input name="results"> 2 </input>
            <input name="grouping_transform">make_int</input>
          </inputs>
        </results>
        <attribute name="title">RSV Reporting Sites by VDT Version</attribute>
        <attribute name="column_name">Deployed Site Count</attribute>
        <attribute name="pivot_name">Version</attribute>
        <attribute name="graph_type">GratiaStackedBar</attribute>
    </query>

    <query name="rsv_version_deployment_count">
        <inputs>
            <input name="starttime" type="timestamp" kind="sql">time.time()-60*86400</input>
            <input name="endtime" type="timestamp" kind="sql">time.time()</input>
            <input name="span" kind="sql" type="int">86400</input>
            <input name="version" kind="sql">.*VDT Version</input>
            <input name="details_len" kind="sql" type="int">9</input>
        </inputs>
        <sql>
        SELECT
            version, time, COUNT(*) as deploy_count
        FROM
            (SELECT
                truncate( RSVM.timestamp / :span, 0 ) * :span as time,
                OIMR.fqdn,
                concat('RSV-', substring(RSVMD.detail, locate('OSG Resource and Service Validation (RSV)', RSVMD.detail)+42, 6)) as version
            FROM rsvprocess.metricdata RSVM
            JOIN oim.resource OIMR on RSVM.resource_id=OIMR.id
            JOIN oim.resource_group OIMRG on OIMR.resource_group_id = OIMRG.id
            JOIN oim.osg_grid_type OIMGT on OIMRG.osg_grid_type_id = OIMGT.id
            JOIN rsvprocess.metricdetail RSVMD on RSVMD.id = RSVM.id
            JOIN oim.metric OIMM on OIMM.id = RSVM.metric_id 
            WHERE
                RSVMD.detail regexp :version AND
                RSVM.timestamp &gt;= :starttime AND RSVM.timestamp &lt; :endtime AND
                OIMM.name = 'org.osg.general.vdt-version'
            GROUP BY time, fqdn, version
            ) as foo
        GROUP BY time, version
        </sql>
        <results module="graphtool.database.query_handler" function="results_parser">
          <inputs>
            <input name="pivots"> 0 </input>
            <input name="grouping"> 1 </input>
            <input name="results"> 2 </input>
            <input name="grouping_transform">make_int</input>
          </inputs>
        </results>
        <attribute name="title">RSV Reporting Sites by RSV Version</attribute>
        <attribute name="column_name">Deployed Site Count</attribute>
        <attribute name="pivot_name">Version</attribute>
        <attribute name="graph_type">GratiaStackedBar</attribute>
    </query>

    <query name="gip_version_deployment_count">
        <inputs>
            <input name="starttime" type="timestamp" kind="sql">time.time()-60*86400</input>
            <input name="endtime" type="timestamp" kind="sql">time.time()</input>
            <input name="span" kind="sql" type="int">86400</input>
            <input name="version" kind="sql">.*VDT Version</input>
            <input name="details_len" kind="sql" type="int">9</input>
        </inputs>
        <sql>
        SELECT
            version, time, COUNT(*) as deploy_count
        FROM
            (SELECT
                truncate( RSVM.timestamp / :span, 0 ) * :span as time,
                OIMR.fqdn,
                concat('GIP-', substring(RSVMD.detail, locate('Generic Information Provider', RSVMD.detail)+29, 7)) as version
            FROM rsvprocess.metricdata RSVM
            JOIN oim.resource OIMR on RSVM.resource_id=OIMR.id
            JOIN oim.resource_group OIMRG on OIMR.resource_group_id = OIMRG.id
            JOIN oim.osg_grid_type OIMGT on OIMRG.osg_grid_type_id = OIMGT.id
            JOIN rsvprocess.metricdetail RSVMD on RSVMD.id = RSVM.id
            JOIN oim.metric OIMM on OIMM.id = RSVM.metric_id
            WHERE
                RSVMD.detail regexp :version AND
                RSVM.timestamp &gt;= :starttime AND RSVM.timestamp &lt; :endtime AND
                OIMM.name = 'org.osg.general.vdt-version'
            GROUP BY time, fqdn, version
            ) as foo
        GROUP BY time, version
        </sql>
        <results module="graphtool.database.query_handler" function="results_parser">
          <inputs>
            <input name="pivots"> 0 </input>
            <input name="grouping"> 1 </input>
            <input name="results"> 2 </input>
            <input name="grouping_transform">make_int</input>
          </inputs>
        </results>
        <attribute name="title">RSV Reporting Sites by GIP Version</attribute>
        <attribute name="column_name">Deployed Site Count</attribute>
        <attribute name="pivot_name">Version</attribute>
        <attribute name="graph_type">GratiaStackedBar</attribute>
    </query>

    <query name="rsv_metric_quality">
      <inputs>
        <input name="span" type="eval" kind="sql">7200</input>
        <input name="starttime" type="timestamp" kind="sql">time.time()-4*86400</input>
        <input name="endtime" type="timestamp" kind="sql">time.time()</input>
        <input name="facility" kind="sql">.*</input>
        <input name="metric" kind="sql">.*</input>
        <input name="countunknown" type="int" kind="sql">0</input>
        <!--<input name="excludefacility" kind="sql">USCMS-FNAL-WC1-CE2|USCMS-FNAL-WC1-CE3|USCMS-FNAL-WC1-CE4|UCSDT2-B</input>-->
      </inputs>
      <sql>
SELECT
  OIMM.name as name,
  from_unixtime(truncate(RSVM.timestamp/:span, 0)*:span) as time,
  SUM(CASE OIMMS.description WHEN "OK" THEN 1 ELSE 0 END),
  SUM(CASE OIMMS.description WHEN "OK" THEN 0 WHEN "UNKNOWN" THEN :countunknown ELSE 1 END)
from
  rsvprocess.metricdata RSVM
join
  oim.resource OIMR on RSVM.resource_id=OIMR.id
join
  oim.metric_status OIMMS on RSVM.metric_status_id = OIMMS.id
join
  oim.metric OIMM on OIMM.id = RSVM.metric_id
where
     RSVM.timestamp &gt;= :starttime AND RSVM.timestamp &lt; :endtime AND
     OIMR.fqdn regexp :facility AND
     OIMM.name regexp :metric
group by
  name, time
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="grouping"> 1 </input>
          <input name="results"> 2,3 </input>
        </inputs>
      </results>
      <attribute name="graph_type"> QualityMap </attribute>
      <attribute name="pivot_name">Site</attribute>
      <attribute name="grouping_name">Time</attribute>
      <attribute name="title">RSV Quality for $facility</attribute>
      <attribute name="column_names">Successful, Failed</attribute>
      <attribute name="column_units">Probes, Probes</attribute>
    </query>

    <query name="rsv_count">
      <inputs>
        <input name="span" type="eval" kind="sql">7200</input>
        <input name="starttime" type="timestamp" kind="sql">time.time()-4*86400</input>
        <input name="endtime" type="timestamp" kind="sql">time.time()</input>
        <input name="facility" kind="sql">.*</input>
        <!--<input name="excludefacility" kind="sql">USCMS-FNAL-WC1-CE2|USCMS-FNAL-WC1-CE3|USCMS-FNAL-WC1-CE4|UCSDT2-B</input>-->
      </inputs>
      <sql>
select
  OIMR.fqdn as fqdn,
  from_unixtime(truncate(RSVM.timestamp/:span, 0)*:span) as time,
  COUNT(*)
from
  rsvprocess.metricdata RSVM
join
  oim.resource OIMR on RSVM.resource_id=OIMR.id
where
     RSVM.timestamp &gt;= :starttime AND RSVM.timestamp &lt; :endtime AND
     OIMR.fqdn regexp :facility
group by
  fqdn, time
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="grouping"> 1 </input>
          <input name="results"> 2 </input>
        </inputs>
      </results>
      <attribute name="graph_type"> GratiaStackedBar </attribute>
      <attribute name="pivot_name">Site</attribute>
      <attribute name="grouping_name">Time</attribute>
      <attribute name="title">RSV Probe Count</attribute>
      <attribute name="column_names">Probes Run</attribute>
      <attribute name="column_units"/>
    </query>

    <query name="rsv_dist">
      <inputs>
        <input name="starttime" type="timestamp" kind="sql">time.time()-4*86400</input>
        <input name="endtime" type="timestamp" kind="sql">time.time()</input>
        <input name="facility" kind="sql">.*</input>
        <!--<input name="excludefacility" kind="sql">USCMS-FNAL-WC1-CE2|USCMS-FNAL-WC1-CE3|USCMS-FNAL-WC1-CE4|UCSDT2-B</input>-->
      </inputs>
      <sql>
select
  OIMMS.description,
  COUNT(*)
from
  rsvprocess.metricdata RSVM
join oim.metric_status OIMMS on RSVM.metric_status_id = OIMMS.id
join oim.resource OIMR on RSVM.resource_id=OIMR.id
where
     RSVM.timestamp &gt;= :starttime AND RSVM.timestamp &lt; :endtime AND
     OIMR.fqdn regexp :facility
group by
  OIMMS.description
      </sql>
      <results module="graphtool.database.query_handler" function="simple_results_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="results"> 1 </input>
        </inputs>
      </results>
      <attribute name="graph_type"> GratiaPie </attribute>
      <attribute name="pivot_name">Status</attribute>
      <attribute name="title">RSV Status Distribution</attribute>
      <attribute name="column_names">Status</attribute>
      <attribute name="column_units"/>
    </query>

    <query name="failed_tests">
        <inputs>
            <input name="span" type="eval" kind="sql">7200</input>
            <input name="errorstart" type="timestamp" kind="sql">time.time()-4*86400</input>
            <input name="facility" kind="sql">Nebraska</input>
        </inputs>
        <sql>
select
    SummaryData,
    GatheredAt,
    DetailsData,
    MetricType
from MetricRecord
where Timestamp &gt;=:errorstart AND Timestamp &lt; :errorstart + INTERVAL :span seconds
        </sql>
        <results module="gratia.database.query_handler" function="fake_parser"/>
        <attribute name="graph_type"/>
        <attribute name="title">Failed RSV Tests</attribute>
    </query>

    <query name="critical_tests">
        <sql>
            SELECT
                m.name as metric_name,
                s.name as service_name
            FROM oim.metric m 
            JOIN oim.metric_service ms ON ms.metric_id=m.id
            JOIN oim.service s ON s.id=ms.service_id
            WHERE ms.critical=1
            <results module="graphtool.database.query_handler" function="complex_pivot_parser"/>
            <attribute name="graph_type"/>
            <attribute name="title">Critical Tests by Service Type</attribute>
        </sql>
    </query>

    <query name="ownership">
      <sql>
        SELECT
          OIMR.name,
          v.name,
          o.percent
        FROM oim.vo_resource_ownership o
        JOIN oim.vo v on v.id = o.vo_id
        JOIN oim.resource OIMR on OIMR.id = o.resource_id
      </sql>
      <results module="graphtool.database.query_handler" function="complex_pivot_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="results"> 1,2 </input>
        </inputs>
      </results>
      <attribute name="pivot_name">Site</attribute>
      <attribute name="column_names">VO Name,Percentage</attribute>
      <attribute name="column_units">,</attribute>
      <attribute name="graph_type"/>
      <attribute name="title">VO Ownership of Resources</attribute>
    </query>

    <query name="simple_ownership">
      <sql>
        SELECT
          OIMR.name as ResourceName,
          v.name as VOName
        FROM oim.vo_resource_ownership o
        JOIN oim.vo v on v.id = o.vo_id
        JOIN oim.resource OIMR on OIMR.id = o.resource_id
      </sql>
      <results module="gratia.database.query_handler" function="fake_parser">
        <inputs>
          <input name="columns">ResourceName, VOName</input>
        </inputs>
      </results>
    </query>

    <query name="resources">
      <sql>
        SELECT r.name, r.fqdn FROM oim.resource r GROUP BY r.name
      </sql>
      <results module="graphtool.database.query_handler" function="simple_results_parser"/>
      <attribute name="title">Resource Name to FQDN</attribute>
    </query>

    <query name="vo">
      <sql>
        SELECT distinct vo.name, 1 FROM oim.vo vo where active=1 and disable=0
      </sql>
      <results module="graphtool.database.query_handler" function="simple_results_parser"/>
      <attribute name="title">Registered VOs in OIM</attribute>
    </query>

    <query name="field_of_science">
      <sql>
        SELECT
          v.name,
          s.name
        FROM oim.vo_field_of_science fos
        JOIN oim.vo v on v.id = fos.vo_id
        JOIN oim.field_of_science s on s.id = fos.field_of_science_id
      </sql>
      <results module="graphtool.database.query_handler" function="complex_pivot_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="results"> 1 </input>
        </inputs>
      </results>
      <attribute name="pivot_name">VO Name</attribute>
      <attribute name="column_names">Field of Science</attribute>
      <attribute name="column_units"></attribute>
      <attribute name="graph_type"/>
      <attribute name="title">VO Field of Science</attribute>
    </query>

  </class>

</graphtool-config>

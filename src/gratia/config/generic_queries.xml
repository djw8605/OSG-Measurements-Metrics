<graphtool-config>

  <import module="gratia.database.query_handler">*</import>

  <import module="graphtool.database.queries">SqlQueries</import>
  <import module="graphtool.database.query_handler">*</import>
  <import module="time"/> 
  <import file="$HOME/dbinfo/DBParam.xml" />
 
  <import module="gratia.config" data_file="security.xml" />
  <import module="gratia.config" data_file="vo_ownership_queries.xml"/>

  <class type="SqlQueries" name="GratiaGenericQuery">

    <attribute name="connection_manager"> GratiaConnMan </attribute>

    <aggregate>
      <connection> gratia </connection>
    </aggregate>

    <query name="simple_query">
      <inputs>
        <input name="span" type="int" kind="sql">3600</input>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-2*86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
        <input name="facility" kind="sql"> .* </input>
        <input name="vo" kind="sql"> .* </input>
      </inputs>
      <sql>
        SELECT
          <slot name="group"/>,
          <slot name="column"/>
        FROM
          JobUsageSimple
        JOIN
          CEProbes ON JobUsageSimple.ProbeName = CEProbes.probename
        JOIN
          CETable ON CEProbes.facility_id = CETable.facility_id
        <slot name="JOIN"/>
        WHERE
          EndTime &gt;= :starttime AND
          EndTime &lt; :endtime AND
          CETable.facility_name regexp :facility AND
          ReportableVOName regexp :vo 
          <slot name="where"/>
        GROUP BY
          <slot name="group"/>
        <slot name="having"/> 
      </sql>
      <results module="graphtool.database.query_handler" function="simple_results_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="results"> 1 </input>
        </inputs>
      </results>
      <attribute name="graph_type">GratiaPie</attribute>
      <attribute name="pivot_name" />
      <attribute name="title" />
      <attribute name="column_names" />
      <attribute name="column_units" />
    </query>

    <query name="simple_master_summary">
        <inputs>
            <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-14*86400</input>
            <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
            <input name="facility" kind="sql"> .* </input>
            <input name="probe" kind="sql"> .* </input>
            <input name="vo" kind="sql"> .* </input>
            <input name="exclude-vo" kind="sql"> NONE </input>
            <input name="exclude-facility" kind="sql"> NONE </input>
        </inputs>
        <sql>
            SELECT
                <slot name="group"/>,
                <slot name="column"/>
            FROM
                MasterSummaryData R
            JOIN
                Probe P on R.ProbeName = P.probename
            JOIN
                Site S on S.siteid = P.siteid
            JOIN
                VONameCorrection VC ON (VC.corrid=R.VOcorrid)
            JOIN
                VO on (VC.void = VO.void)
            <slot name="join"/>
            WHERE
                R.EndTime &gt;= :starttime AND
                R.EndTime &lt; :endtime AND
                S.SiteName regexp :facility AND
                VO.VOName regexp :vo AND
                R.ResourceType = 'Batch' AND
                (NOT (S.SiteName regexp :exclude-facility)) AND
                (NOT (VO.VOName regexp :exclude-vo)) AND
                R.WallDuration &lt; 1100000000 AND
                R.ProbeName regexp :probe
                <slot name="where"/>
            GROUP BY 
                <slot name="group"/>
            <slot name="having"/>
        </sql>
        <results module="graphtool.database.query_handler" function="simple_results_parser">
            <inputs>
                <input name="pivots"> 0 </input>
                <input name="results"> 1 </input>
            </inputs>
        </results>
        <attribute name="graph_type">GratiaPie</attribute>
        <attribute name="pivot_name" />
        <attribute name="title" />
        <attribute name="column_names" />
        <attribute name="column_units" />
    </query>

    <query name="master_summary">
        <inputs>
            <input name="span" type="int" kind="sql">86400</input>
            <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-14*86400</input>
            <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
            <input name="facility" kind="sql"> .* </input>
            <input name="probe" kind="sql"> .* </input>
            <input name="vo" kind="sql"> .* </input>
            <input name="exclude-vo" kind="sql"> NONE </input>
            <input name="exclude-facility" kind="sql"> NONE </input>
        </inputs>
        <sql>
            SELECT
                <slot name="group"/>,
                truncate( unix_timestamp(EndTime) / :span, 0 ) * :span as time,
                <slot name="column"/>
            FROM
                MasterSummaryData R
            JOIN
                Probe P on R.ProbeName = P.probename
            JOIN
                Site S on S.siteid = P.siteid
            JOIN
                VONameCorrection VC ON (VC.corrid=R.VOcorrid)
            JOIN
                VO on (VC.void = VO.void)
            <slot name="join"/> 
            WHERE
                R.EndTime &gt;= :starttime AND
                R.EndTime &lt; :endtime AND
                S.SiteName regexp :facility AND
                VO.VOName regexp :vo AND
                R.ResourceType = 'Batch' AND
                (NOT (S.SiteName regexp :exclude-facility)) AND
                (NOT (VO.VOName regexp :exclude-vo)) AND
                R.WallDuration &lt; 1100000000 AND
                R.ProbeName regexp :probe
                <slot name="where"/>
            GROUP BY 
                <slot name="group"/>,
                time
            <slot name="having"/>
        </sql>
        <results module="graphtool.database.query_handler" function="results_parser">
            <inputs>
                <input name="pivots"> 0 </input>
                <input name="grouping"> 1 </input>
                <input name="results"> 2 </input>
            </inputs>
        </results>
        <attribute name="graph_type">GratiaStackedBar</attribute>
        <attribute name="pivot_name" />
        <attribute name="title" />
        <attribute name="column_names" />
        <attribute name="column_units" />
    </query>

    <query name="simple_summary">
        <inputs>
            <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-14*86400</input>
            <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
            <input name="facility" kind="sql"> .* </input>
            <input name="probe" kind="sql"> .* </input>
            <input name="vo" kind="sql"> .* </input>
            <input name="exclude-vo" kind="sql"> NONE </input>
            <input name="exclude-facility" kind="sql"> NONE </input>
        </inputs>
        <sql>
            SELECT
                <slot name="group"/>,
                <slot name="column"/>
            FROM
                VOProbeSummary R
            JOIN
                Probe P on R.ProbeName = P.probename
            JOIN
                Site S on S.siteid = P.siteid
            <slot name="join"/>
            WHERE
                R.EndTime &gt;= :starttime AND
                R.EndTime &lt; :endtime AND
                S.SiteName regexp :facility AND
                R.VOName regexp :vo AND
                R.ResourceType = 'Batch' AND
                (NOT (S.SiteName regexp :exclude-facility)) AND
                (NOT (R.VOName regexp :exclude-vo)) AND
                R.WallDuration &lt; 1100000000 AND
                R.ProbeName regexp :probe
                <slot name="where"/>
            GROUP BY 
                <slot name="group"/>
            <slot name="having"/>
        </sql>
        <results module="graphtool.database.query_handler" function="simple_results_parser">
            <inputs>
                <input name="pivots"> 0 </input>
                <input name="results"> 1 </input>
            </inputs>
        </results>
        <attribute name="graph_type">GratiaPie</attribute> 
        <attribute name="pivot_name" />
        <attribute name="title" />
        <attribute name="column_names" />
        <attribute name="column_units" />
    </query>

    <query name="jobs_query">
      <inputs>
        <input name="span" type="int" kind="sql">3600</input>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-2*86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
        <input name="facility" kind="sql"> .* </input>
        <input name="vo" kind="sql"> .* </input>
        <input name="exclude-vo" kind="sql"> NONE </input>
        <input name="exclude-facility" kind="sql"> NONE </input> 
        <input name="user" kind="sql"> .* </input> 
      </inputs>
      <sql>
        SELECT
          <slot name="group"/>,
          truncate( unix_timestamp(EndTime) / :span, 0 ) * :span as time,
          <slot name="column"/>
        FROM
          JobUsageRecord J
        JOIN
          JobUsageRecord_Meta M ON M.dbid = J.dbid
        JOIN
          VONameCorrection V ON J.VOName = V.VOName AND J.ReportableVOName = V.ReportableVOName
        JOIN
          VO ON V.void = VO.void
        JOIN
          Probe P ON M.ProbeName = P.ProbeName
        JOIN
          Site S ON P.siteid = S.siteid 
        <slot name="JOIN"/>
        WHERE
          EndTime &gt;= :starttime AND
          EndTime &lt; :endtime AND
          S.SiteName regexp :facility AND
          VO.VOName regexp :vo AND
          (NOT (S.SiteName regexp :exclude-facility)) AND
          (NOT (VO.VOName regexp :exclude-vo)) AND
          (:user='.*' OR J.KeyInfoContent regexp :user)
          <slot name="where"/>
        GROUP BY
          <slot name="group"/>,
          time
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="grouping"> 1 </input>
          <input name="results"> 2 </input>
        </inputs>
      </results>
      <attribute name="graph_type">GratiaStackedBar</attribute>
      <attribute name="pivot_name" />
      <attribute name="grouping_name">Time</attribute>
      <attribute name="title" />
      <attribute name="column_names" />
      <attribute name="column_units" />
    </query>

    <query name="jobs_master_summary_query">
      <inputs>
        <input name="span" type="int" kind="sql">86400</input>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-14*86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
        <input name="facility" kind="sql"> .* </input>
        <input name="vo" kind="sql"> .* </input>
        <input name="exclude-vo" kind="sql"> NONE </input>
        <input name="exclude-facility" kind="sql"> NONE </input>
        <input name="probe" kind="sql"> .* </input>
      </inputs>
      <sql>
       SELECT
          <slot name="group"/>,
          truncate( unix_timestamp(EndTime) / :span, 0 ) * :span as time,
          <slot name="column"/>
        FROM
          MasterSummaryData R
        JOIN
          Probe P on R.ProbeName = P.probename
        JOIN
          Site S on S.siteid = P.siteid
        JOIN
          VONameCorrection VC ON (VC.corrid=R.VOcorrid)
        JOIN
          VO on (VC.void = VO.void)
        <slot name="JOIN"/>
        WHERE
          R.ResourceType = 'Batch' AND
          EndTime &gt;= :starttime AND
          EndTime &lt; :endtime AND
          S.SiteName regexp :facility AND
          VO.VOName regexp :vo AND
          (NOT (S.SiteName regexp :exclude-facility)) AND
          (NOT (VO.VOName regexp :exclude-vo)) AND
          R.ProbeName regexp :probe AND
          WallDuration &lt; 1100000000
          <slot name="where"/>
        GROUP BY
          <slot name="group"/>,
          time
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="grouping"> 1 </input>
          <input name="results"> 2 </input>
          <input name="grouping_transform">make_int</input>
        </inputs>
      </results>
      <attribute name="graph_type">GratiaStackedBar</attribute>
      <attribute name="pivot_name" />
      <attribute name="grouping_name">Time</attribute>
      <attribute name="title" />
      <attribute name="column_names" />
      <attribute name="column_units" />
    </query>

    <query name="jobs_summary_query">
      <inputs>
        <input name="span" type="int" kind="sql">86400</input>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-14*86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
        <input name="facility" kind="sql"> .* </input>
        <input name="vo" kind="sql"> .* </input>
        <input name="exclude-vo" kind="sql"> NONE </input>
        <input name="exclude-facility" kind="sql"> NONE </input>
        <input name="probe" kind="sql"> .* </input>
      </inputs>
      <sql>
       SELECT
          <slot name="group"/>,
          truncate( unix_timestamp(EndTime) / :span, 0 ) * :span as time,
          <slot name="column"/>
        FROM
          VOProbeSummary R
        JOIN
          Probe P on R.ProbeName = P.probename
        JOIN
          Site S on S.siteid = P.siteid
        <slot name="JOIN"/>
        WHERE
          R.ResourceType = 'Batch' AND
          EndTime &gt;= :starttime AND
          EndTime &lt; :endtime AND
          S.SiteName regexp :facility AND
          R.VOName regexp :vo AND
          (NOT (S.SiteName regexp :exclude-facility)) AND
          (NOT (R.VOName regexp :exclude-vo)) AND
          R.ProbeName regexp :probe AND
          WallDuration &lt; 1100000000
          <slot name="where"/>
        GROUP BY
          <slot name="group"/>,
          time
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="grouping"> 1 </input>
          <input name="results"> 2 </input>
          <input name="grouping_transform">make_int</input>
        </inputs>
      </results>
      <attribute name="graph_type">GratiaStackedBar</attribute>
      <attribute name="pivot_name" />
      <attribute name="grouping_name">Time</attribute>
      <attribute name="title" />
      <attribute name="column_names" />
      <attribute name="column_units" />
    </query>

  </class>

  <class type="SqlQueries" name="GipGeneric">

    <attribute name="connection_manager"> GIPConnMan </attribute>
    <aggregate>
      <connection> gip </connection>
    </aggregate>

    <query name="non_host_rt">
      <inputs>
        <input name="starttime" type="datetime" kind="sql">time.time()-1800</input>
        <input name="endtime" type="datetime" kind="sql">time.time()</input>
        <input name="vo" kind="sql">.*</input>
        <input name="facility" kind="sql">.*</input>
        <input name="excludefacility" kind="sql">USCMS-FNAL-WC1-CE2|USCMS-FNAL-WC1-CE3|USCMS-FNAL-WC1-CE4|UCSDT2-B|BNL_ATLAS_2|BNL_ITB_Test1|GLOW-CMS|TANYAT2|UCSDT2-ITB2</input>
      </inputs>
      <sql>
select
  myGroup,
  avg(myStat)
from
(select time, myGroup, sum(myStat) as myStat from
  (select
     time,
     <slot name="group"/> as myGroup,
     hostName,
     sum(<slot name="column"/>) as myStat
   from
     vo_info
   where
     time &gt;= :starttime AND time &lt; :endtime AND
     vo regexp :vo
   group by
     time, myGroup, hostName
  ) as foo
join site_info s on foo.hostName=s.cename
where 
  s.sitename regexp :facility AND
  NOT (s.sitename regexp :excludefacility)
group by myGroup, time) as foo2
group by
  myGroup
      </sql>
      <results module="graphtool.database.query_handler" function="simple_results_parser"/>
      <attribute name="graph_type"> GratiaPie </attribute>
      <attribute name="pivot_name">VO</attribute>
      <attribute name="column_units"/>
    </query>    

    <query name="host_rt">
      <inputs>
        <input name="starttime" type="datetime" kind="sql">time.time()-1800</input>
        <input name="endtime" type="datetime" kind="sql">time.time()</input>
        <input name="vo" kind="sql">.*</input>
        <input name="facility" kind="sql">.*</input>
        <input name="excludefacility" kind="sql">USCMS-FNAL-WC1-CE2|USCMS-FNAL-WC1-CE3|USCMS-FNAL-WC1-CE4|UCSDT2-B|BNL_ATLAS_2|BNL_ITB_Test1|GLOW-CMS|TANYAT2|UCSDT2-ITB2</input>
      </inputs>
      <sql>
select
  hostName,
  avg(myStat)
from
  (select
     time,
     hostName,
     sum(<slot name="column"/>) as myStat
   from
     vo_info
   where
     time &gt;= :starttime AND time &lt; :endtime AND
     vo regexp :vo
   group by
     time, hostName
  ) as foo
join site_info s on foo.hostName=s.cename
where
  s.sitename regexp :facility AND
  NOT (s.sitename regexp :excludefacility)
group by
  hostName
      </sql>
      <results module="gratia.database.query_handler" function="gip_parser_simple"/>
      <attribute name="graph_type"> GratiaPie </attribute>
      <attribute name="pivot_name">Facility</attribute>
      <attribute name="column_units"/>
    </query>

    <query name="ce_info_rt">
      <inputs>
        <input name="starttime" type="datetime" kind="sql">time.time()-1800</input>   
        <input name="endtime" type="datetime" kind="sql">time.time()</input>
        <input name="facility" kind="sql">.*</input>
        <input name="excludefacility" kind="sql">USCMS-FNAL-WC1-CE2|USCMS-FNAL-WC1-CE3|USCMS-FNAL-WC1-CE4|UCSDT2-B|BNL_ATLAS_2|BNL_ITB_Test1|GLOW-CMS|TANYAT2|UCSDT2-ITB2</input>
      </inputs>
      <sql>
select
  hostName,
  avg(myStat)
from
  (select
     time,
     hostName,
     sum(<slot name="column"/>) as myStat
   from
     ce_info
   where
     time &gt;= :starttime AND time &lt; :endtime
   group by
     time, hostName
  ) as foo
join site_info s on foo.hostName=s.cename
where
  s.sitename regexp :facility AND
  NOT (s.sitename regexp :excludefacility)
group by
  hostName
      </sql>
      <results module="gratia.database.query_handler" function="gip_parser_simple"/>
      <attribute name="graph_type"> GratiaPie </attribute>
      <attribute name="pivot_name">Facility</attribute>
      <attribute name="column_units"/>
    </query>

    <query name="non_host_ts">
      <inputs>
        <input name="span" type="eval" kind="sql">1800</input>
        <input name="starttime" type="datetime" kind="sql">time.time()-2*86400</input>
        <input name="endtime" type="datetime" kind="sql">time.time()</input>
        <input name="vo" kind="sql">.*</input>
        <input name="facility" kind="sql">.*</input>
        <input name="excludefacility" kind="sql">USCMS-FNAL-WC1-CE2|USCMS-FNAL-WC1-CE3|USCMS-FNAL-WC1-CE4|UCSDT2-B|BNL_ATLAS_2|BNL_ITB_Test1|GLOW-CMS|TANYAT2|UCSDT2-ITB2</input>
      </inputs>
      <sql>
select
  truncate(unix_timestamp(time)/:span, 0)*:span as time,
  myGroup,
  avg(myStat)
from
(select time, myGroup, sum(myStat) as myStat from
  (select
     time,
     <slot name="group"/> as myGroup,
     hostName,
     sum(<slot name="column"/>) as myStat
   from
     vo_info
   where
     time &gt;= :starttime AND time &lt; :endtime AND
     vo regexp :vo
   group by
     time, myGroup, hostName
  ) as foo
join site_info s on foo.hostName=s.cename
where
  s.sitename regexp :facility AND
  NOT (s.sitename regexp :excludefacility)
group by time, myGroup
) as foo2
group by
  time,
  myGroup
      </sql>
      <results module="gratia.database.query_handler" function="pivot_group_parser_plus">
        <inputs>
          <input name="pivots"> 1 </input>
          <input name="grouping"> 0 </input>
          <input name="results"> 2 </input>
          <input name="grouping_transform"> make_int </input>
        </inputs>
      </results>
      <attribute name="graph_type"> GratiaStackedLine </attribute>
      <attribute name="pivot_name">VO</attribute>
      <attribute name="grouping_name">Time</attribute>
      <attribute name="column_units"/>
    </query>

    <query name="host_ts">
      <inputs>
        <input name="span" type="eval" kind="sql">1800</input>
        <input name="starttime" type="datetime" kind="sql">time.time()-2*86400</input>
        <input name="endtime" type="datetime" kind="sql">time.time()</input>
        <input name="vo" kind="sql">.*</input>
        <input name="facility" kind="sql">.*</input>
        <input name="excludefacility" kind="sql">USCMS-FNAL-WC1-CE2|USCMS-FNAL-WC1-CE3|USCMS-FNAL-WC1-CE4|UCSDT2-B|BNL_ATLAS_2|BNL_ITB_Test1|GLOW-CMS|TANYAT2|UCSDT2-ITB2</input>
      </inputs>
      <sql>
select
  truncate(unix_timestamp(time)/:span, 0)*:span as time,
  hostName,
  avg(myStat)
from
  (select
     time,
     hostName,
     sum(<slot name="column"/>) as myStat
   from
     vo_info
   where
     time &gt;= :starttime AND time &lt; :endtime AND
     vo regexp :vo
   group by
     time, hostName
  ) as foo
join site_info s on foo.hostName=s.cename
where
  s.sitename regexp :facility AND
  NOT (s.sitename regexp :excludefacility)
group by
  time,
  hostName
      </sql>
      <results module="gratia.database.query_handler" function="gip_parser">
        <inputs>
          <input name="pivots"> 1 </input>
          <input name="grouping"> 0 </input>
          <input name="results"> 2 </input>
          <input name="grouping_transform"> make_int </input>
        </inputs>
      </results>
      <attribute name="graph_type"> GratiaStackedLine </attribute>
      <attribute name="pivot_name">Facility</attribute>
      <attribute name="grouping_name">Time</attribute>
      <attribute name="column_units"/>
    </query>

    <query name="ce_info_ts">
      <inputs>
        <input name="span" type="eval" kind="sql">1800</input>
        <input name="starttime" type="datetime" kind="sql">time.time()-2*86400</input>
              <input name="endtime" type="datetime" kind="sql">time.time()</input>
        <input name="facility" kind="sql">.*</input>
        <input name="excludefacility" kind="sql">USCMS-FNAL-WC1-CE2|USCMS-FNAL-WC1-CE3|USCMS-FNAL-WC1-CE4|UCSDT2-B|BNL_ATLAS_2|BNL_ITB_Test1|GLOW-CMS|TANYAT2|UCSDT2-ITB2</input>
      </inputs>
      <sql>
select
  truncate(unix_timestamp(time)/:span, 0)*:span as time,
  hostName,
  avg(myStat)
from
  (select
     time,
     hostName,
     sum(<slot name="column"/>) as myStat
   from
     ce_info
   join site_info s on ce_info.hostName=s.cename
   where
     time &gt;= :starttime AND time &lt; :endtime
   group by
     time, hostName
  ) as foo 
join site_info s on foo.hostName=s.cename
where 
  s.sitename regexp :facility AND
  NOT (s.sitename regexp :excludefacility)
group by
  time,
  hostName
      </sql>
      <results module="gratia.database.query_handler" function="gip_parser">
        <inputs>
          <input name="pivots"> 1 </input>
          <input name="grouping"> 0 </input>
          <input name="results"> 2 </input>
          <input name="grouping_transform"> make_int </input>
        </inputs>
      </results>
      <attribute name="graph_type"> GratiaStackedLine </attribute>
      <attribute name="pivot_name">Facility</attribute>
      <attribute name="grouping_name">Time</attribute>
      <attribute name="column_units"/>
    </query>

  </class>

  <class type="SqlQueries" name="GratiaStorageQuery">

    <attribute name="connection_manager"> GratiaConnMan </attribute>

    <aggregate>
      <connection> gratia-itb </connection>
    </aggregate>

    <query name="simple_query">
      <inputs>
        <input name="span" type="int" kind="sql">3600</input>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-2*86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
        <input name="facility" kind="sql"> .* </input>
        <input name="vo" kind="sql"> .* </input>
      </inputs>
      <sql>
        SELECT
          <slot name="group"/>,
          <slot name="column"/>
        FROM
          DataTransferRecord
        <slot name="JOIN"/>
        WHERE
          EndTime &gt;= :starttime AND
          EndTime &lt; :endtime AND
          EndTime &gt;= curdate() - INTERVAL 5 DAY AND
          VO regexp :vo AND
          SiteName regexp :facility
          <slot name="where"/>
        GROUP BY
          <slot name="group"/>
        <slot name="having"/> 
      </sql>
      <results module="graphtool.database.query_handler" function="simple_results_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="results"> 1 </input>
        </inputs>
      </results>
      <attribute name="graph_type">GratiaPie</attribute>
      <attribute name="pivot_name" />
      <attribute name="title" />
      <attribute name="column_names" />
      <attribute name="column_units" />
    </query>

    <query name="summary">
      <inputs>
        <input name="span" type="int" kind="sql">3600</input>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
        <input name="facility" kind="sql"> .* </input>
        <input name="vo" kind="sql"> .* </input>
        <input name="exclude-vo" kind="sql"> NONE </input>
        <input name="exclude-facility" kind="sql"> NONE </input>
      </inputs>
      <sql>
       SELECT
          <slot name="group"/>,
          truncate( unix_timestamp(EndTime) / :span, 0 ) * :span,
          <slot name="column"/>
        FROM
          DataTransferRecord
        <slot name="JOIN"/>
        WHERE
          EndTime &gt;= :starttime AND
          EndTime &lt; :endtime AND
          EndTime &gt;= curdate() - INTERVAL 5 DAY AND
          SiteName regexp :facility AND
          VO regexp :vo AND
          (NOT (SiteName regexp :exclude-facility)) AND
          (NOT (VO regexp :exclude-vo))
          <slot name="where"/>
        GROUP BY
          <slot name="group"/>,
          truncate( unix_timestamp(EndTime) / :span, 0 )
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="grouping"> 1 </input>
          <input name="results"> 2 </input>
          <input name="grouping_transform">make_int</input>
        </inputs>
      </results>
      <attribute name="graph_type">GratiaStackedBar</attribute>
      <attribute name="pivot_name" />
      <attribute name="grouping_name">Time</attribute>
      <attribute name="title" />
      <attribute name="column_names" />
      <attribute name="column_units" />
    </query>

    <query name="site_simple">
      <inputs>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
        <input name="facility" kind="sql"> Unknown </input>
        <input name="vo" kind="sql"> .* </input>
        <input name="exclude-vo" kind="sql"> NONE </input>
        <input name="user" kind="sql"> .* </input>
        <input name="exclude-dn" kind="sql"> NONE </input>
        <input name="limit" type="int" kind="sql"> 20 </input>
        <input name="offset" type="int" kind="sql"> 0 </input>
      </inputs>
      <sql>
       SELECT
          <slot name="column"/>
        FROM
          DataTransferRecord
        <slot name="JOIN"/>
        WHERE
          EndTime &gt;= :starttime AND
          EndTime &lt; :endtime AND
          EndTime &gt;= curdate() - INTERVAL 5 DAY AND
          SiteName=:facility AND
          VO regexp :vo AND
          (NOT (VO regexp :exclude-vo)) AND
          DN regexp :user AND
          (NOT (DN regexp :exclude-dn))
          <slot name="where"/>
        LIMIT :limit OFFSET :offset
      </sql>
      <results module="gratia.database.query_handler" function="table_parser" />
      <attribute name="title" />
      <attribute name="column_names" />
      <attribute name="column_units" />
    </query>

    <query name="site_summary">
      <inputs>
        <input name="span" type="int" kind="sql">3600</input>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
        <input name="facility" kind="sql"> Unknown </input>
        <input name="vo" kind="sql"> .* </input>
        <input name="exclude-vo" kind="sql"> NONE </input>
        <input name="user" kind="sql"> .* </input>
      </inputs>
      <sql>
       SELECT
          <slot name="group"/>,
          truncate( unix_timestamp(EndTime) / :span, 0 ) * :span as time,
          <slot name="column"/>
        FROM
          DataTransferRecord
        <slot name="JOIN"/>
        WHERE
          EndTime &gt;= :starttime AND
          EndTime &lt; :endtime AND 
          EndTime &gt;= curdate() - INTERVAL 5 DAY AND
          SiteName=:facility AND
          VO regexp :vo AND
          (NOT (VO regexp :exclude-vo)) AND
          DN regexp :user
          <slot name="where"/>
        GROUP BY
          <slot name="group"/>,
          time
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="grouping"> 1 </input>
          <input name="results"> 2 </input>
          <input name="grouping_transform">make_int</input>
        </inputs>
      </results>
      <attribute name="graph_type">GratiaStackedBar</attribute>
      <attribute name="pivot_name" />
      <attribute name="grouping_name">Time</attribute>
      <attribute name="title" />
      <attribute name="column_names" />
      <attribute name="column_units" />
    </query>

    <query name="user_summary">
      <inputs>
        <input name="span" type="int" kind="sql">3600</input>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
        <input name="facility" kind="sql"> .* </input>
        <input name="vo" kind="sql"> .* </input>
        <input name="exclude-vo" kind="sql"> NONE </input>
        <input name="exclude-facility" kind="sql"> NONE </input>
        <input name="dn" kind="sql"> NONE </input>
      </inputs>
      <sql>
       SELECT
          <slot name="group"/>,
          truncate( unix_timestamp(EndTime) / :span, 0 ) * :span as time,
          <slot name="column"/>
        FROM
          DataTransferRecord
        <slot name="JOIN"/>
        WHERE
          EndTime &gt;= :starttime AND
          EndTime &lt; :endtime AND
          EndTime &gt;= curdate() - INTERVAL 5 DAY AND
          SiteName regexp :facility AND
          VO regexp :vo AND
          DN=:dn AND
          (NOT (VO regexp :exclude-vo)) AND
          (NOT (SiteName regexp :exclude-facility)) AND
          <slot name="where"/>
        GROUP BY
          <slot name="group"/>,
          time
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="grouping"> 1 </input>
          <input name="results"> 2 </input>
          <input name="grouping_transform">make_int</input>
        </inputs>
      </results>
      <attribute name="graph_type">GratiaStackedBar</attribute>
      <attribute name="pivot_name" />
      <attribute name="grouping_name">Time</attribute>
      <attribute name="title" />
      <attribute name="column_names" />
      <attribute name="column_units" />
      <attribute name="security">GratiaSecurity</attribute>
      <attribute name="authtype">site_ownership</attribute>
      <attribute name="access">facility</attribute>
    </query>

    <query name="vo_summary">
      <inputs>
        <input name="span" type="int" kind="sql">3600</input>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
        <input name="facility" kind="sql"> .* </input>
        <input name="vo" kind="sql"> Unknown </input>
        <input name="exclude-facility" kind="sql"> NONE </input>
      </inputs>
      <sql>
       SELECT
          <slot name="group"/>,
          truncate( unix_timestamp(EndTime) / :span, 0 ) * :span as time,
          <slot name="column"/>
        FROM
          DataTransferRecord
        <slot name="JOIN"/>
        WHERE
          EndTime &gt;= :starttime AND
          EndTime &lt; :endtime AND
          EndTime &gt;= curdate() - INTERVAL 5 DAY AND
          SiteName regexp :facility AND
          VO=:vo AND
          (NOT (VO regexp :exclude-facility))
          <slot name="where"/>
        GROUP BY
          <slot name="group"/>,
          time
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="grouping"> 1 </input>
          <input name="results"> 2 </input>
          <input name="grouping_transform">make_int</input>
        </inputs>
      </results>
      <attribute name="graph_type">GratiaStackedBar</attribute>
      <attribute name="pivot_name" />
      <attribute name="grouping_name">Time</attribute>
      <attribute name="title" />
      <attribute name="column_names" />
      <attribute name="column_units" />
      <attribute name="security">GratiaSecurity</attribute>
      <attribute name="authtype">site_ownership</attribute>
      <attribute name="access">facility</attribute>
    </query>

  </class>

</graphtool-config>


